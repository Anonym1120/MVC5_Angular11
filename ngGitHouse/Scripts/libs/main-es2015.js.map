{"version":3,"sources":["./src/app/app.component.css","./src/environments/environment.ts","./src/app/github.service.ts","./src/app/gitrepos/gitrepos.component.css","./src/app/gitrepos/gitrepos.component.html","./src/app/app.component.ts","./src/app/gitrepos/gitrepos.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { GitRepoInfo } from './git-repo-info';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GithubService {   \r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getUserRepos(): Observable<GitRepoInfo> {\r\n        return this.httpClient.get(`https://api.github.com/users/mithunvp/repos`).\r\n            pipe(\r\n                map((item: any) => item.map(p => <GitRepoInfo>\r\n                    {\r\n                        name: p.name,\r\n                        stars: p.stargazers_count,\r\n                        htmlUrl: p.html_url,\r\n                        forks: p.forks,\r\n                        description: p.description\r\n                    })));            \r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnaXRyZXBvcy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<table class=\\\"table table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Stars</th>\\r\\n            <th>Forks</th>\\r\\n            \\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let git of gitRepoList\\\">\\r\\n            <td><a href=\\\"{{git.htmlUrl}}\\\" target=\\\"_blank\\\">{{git.name}}</a></td>\\r\\n            <td>{{git.stars}}</td>\\r\\n            <td>{{git.forks}}</td>            \\r\\n        </tr>        \\r\\n    </tbody>\\r\\n</table>\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'title, title, title';\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GithubService } from '../github.service';\r\n\r\n@Component({\r\n    selector: 'app-gitrepos',\r\n    templateUrl: './gitrepos.component.html',\r\n    styleUrls: ['./gitrepos.component.css']\r\n})\r\nexport class GitreposComponent implements OnInit {\r\n    public gitRepoList;\r\n    constructor(private githubserv: GithubService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadGithubRepos();\r\n    }\r\n\r\n    public loadGithubRepos() {\r\n        this.githubserv.getUserRepos().subscribe((data) => {\r\n            this.gitRepoList = data;\r\n        });\r\n    }\r\n}\r\n","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h2>\\r\\n    Welcome to {{ title }}!\\r\\n  </h2>\\r\\n</div>\\r\\n\\r\\n<app-gitrepos></app-gitrepos>\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { GitreposComponent } from './gitrepos/gitrepos.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GitreposComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule, HttpClientModule\r\n  ],\r\n  providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}