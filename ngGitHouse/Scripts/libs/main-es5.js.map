{"version":3,"sources":["webpack:///src/app/app.component.css","webpack:///src/environments/environment.ts","webpack:///src/app/github.service.ts","webpack:///src/app/gitrepos/gitrepos.component.css","webpack:///src/app/gitrepos/gitrepos.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/gitrepos/gitrepos.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","GithubService","httpClient","get","pipe","item","map","p","name","stars","stargazers_count","htmlUrl","html_url","forks","description","providedIn","AppComponent","title","selector","template","GitreposComponent","githubserv","loadGithubRepos","getUserRepos","subscribe","data","gitRepoList","AppModule","declarations","imports","providers","bootstrap","bootstrapModule","err","console","log","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { GitRepoInfo } from './git-repo-info';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GithubService {   \r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getUserRepos(): Observable<GitRepoInfo> {\r\n        return this.httpClient.get(`https://api.github.com/users/mithunvp/repos`).\r\n            pipe(\r\n                map((item: any) => item.map(p => <GitRepoInfo>\r\n                    {\r\n                        name: p.name,\r\n                        stars: p.stargazers_count,\r\n                        htmlUrl: p.html_url,\r\n                        forks: p.forks,\r\n                        description: p.description\r\n                    })));            \r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnaXRyZXBvcy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<table class=\\\"table table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Stars</th>\\r\\n            <th>Forks</th>\\r\\n            \\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let git of gitRepoList\\\">\\r\\n            <td><a href=\\\"{{git.htmlUrl}}\\\" target=\\\"_blank\\\">{{git.name}}</a></td>\\r\\n            <td>{{git.stars}}</td>\\r\\n            <td>{{git.forks}}</td>            \\r\\n        </tr>        \\r\\n    </tbody>\\r\\n</table>\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'title, title, title';\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GithubService } from '../github.service';\r\n\r\n@Component({\r\n    selector: 'app-gitrepos',\r\n    templateUrl: './gitrepos.component.html',\r\n    styleUrls: ['./gitrepos.component.css']\r\n})\r\nexport class GitreposComponent implements OnInit {\r\n    public gitRepoList;\r\n    constructor(private githubserv: GithubService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadGithubRepos();\r\n    }\r\n\r\n    public loadGithubRepos() {\r\n        this.githubserv.getUserRepos().subscribe((data) => {\r\n            this.gitRepoList = data;\r\n        });\r\n    }\r\n}\r\n","export default \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h2>\\r\\n    Welcome to {{ title }}!\\r\\n  </h2>\\r\\n</div>\\r\\n\\r\\n<app-gitrepos></app-gitrepos>\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { GitreposComponent } from './gitrepos/gitrepos.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GitreposComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule, HttpClientModule\r\n  ],\r\n  providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}